version: '3.8'

services:
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile.monitoring
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app
      - FLASK_ENV=production
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - ALERT_EMAIL=${ALERT_EMAIL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # API Keys
      - HOUSECANARY_API_KEY=${HOUSECANARY_API_KEY}
      - ATTOM_API_KEY=${ATTOM_API_KEY}
      - ZILLOW_API_KEY=${ZILLOW_API_KEY}
      - RENTCAST_API_KEY=${RENTCAST_API_KEY}
      - CLEAR_CAPITAL_API_KEY=${CLEAR_CAPITAL_API_KEY}
    volumes:
      - monitoring_logs:/var/log/real_estate_strategist
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/monitoring/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring_network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge

volumes:
  monitoring_logs:
  redis_data: 